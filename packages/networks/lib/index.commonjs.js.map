{"version":3,"file":"index.commonjs.js","sources":["../src/Network.ts","../src/config/abi.js","../src/config/constants.js","../src/utils.ts","../src/ERC20.ts","../src/BEP20.ts","../src/SPL.ts","../src/index.ts"],"sourcesContent":["import { formatUnits } from \"@ethersproject/units\";\nimport * as _type from \"./types\"\n\nexport class Network {\n  name: string;\n  rpcURL: string;\n  chainID: number;\n  symbol: string;\n  explorerUrl: string;\n  nativeToken: _type.NativeToken;\n\n  constructor(\n    name: string,\n    rpcURL: string,\n    chainID: number,\n    symbol: string,\n    nativeToken: _type.NativeToken,\n    explorerUrl: string\n  ) {\n    this.name = name;\n    this.rpcURL = rpcURL;\n    this.chainID = chainID;\n    this.symbol = symbol;\n    this.explorerUrl = explorerUrl;\n    if (!nativeToken) {\n      throw new Error(\"Constructor do not add native token parameter\");\n    }\n    this.nativeToken = nativeToken;\n  }\n  \n  async getContractMetadata(contractAddress: string): Promise<_type.Contract | null> {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n\n  async getBalance(address: string): Promise<string> {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n\n  getSigner(wallet: any): any {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n\n  getTransactionFee(gasFee: string): string {\n    return formatUnits(gasFee.toString(), this.nativeToken.decimals);\n  }\n\n  getUnitCost(): string {\n    return this.nativeToken.symbol;\n  }\n\n  async createTransactionOrder(wallet: any, order: _type.OrderRequest): Promise<_type.TransactionRequest> {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n\n  async sendTransaction(wallet: any, transactionRequest: _type.TransactionRequest): Promise<_type.TransactionResponse> {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n\n  async getTokenBalances(walletAddress: string): Promise<_type.TokenBalance[]> {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n\n  checkAddress(address: string): boolean {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n\n  onTransactionConfirmed(txHash: string, callback: any) {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n\n  getExplorerUrl(type: string, value: string): string {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n\n  signMessage(wallet: any, message: string): any {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n}\n","const ethABI = [\n    {\n        constant: true,\n        inputs: [],\n        name: \"name\",\n        outputs: [{ name: \"\", type: \"string\" }],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            { name: \"_spender\", type: \"address\" },\n            { name: \"_value\", type: \"uint256\" },\n        ],\n        name: \"approve\",\n        outputs: [{ name: \"success\", type: \"bool\" }],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"totalSupply\",\n        outputs: [{ name: \"\", type: \"uint256\" }],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            { name: \"_from\", type: \"address\" },\n            { name: \"_to\", type: \"address\" },\n            {\n                name: \"_value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transferFrom\",\n        outputs: [{ name: \"success\", type: \"bool\" }],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"decimals\",\n        outputs: [{ name: \"\", type: \"uint8\" }],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"version\",\n        outputs: [{ name: \"\", type: \"string\" }],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [{ name: \"_owner\", type: \"address\" }],\n        name: \"balanceOf\",\n        outputs: [{ name: \"balance\", type: \"uint256\" }],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: \"symbol\",\n        outputs: [{ name: \"\", type: \"string\" }],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        constant: false,\n        inputs: [\n            { name: \"_to\", type: \"address\" },\n            { name: \"_value\", type: \"uint256\" },\n        ],\n        name: \"transfer\",\n        outputs: [{ name: \"success\", type: \"bool\" }],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        constant: true,\n        inputs: [\n            { name: \"_owner\", type: \"address\" },\n            { name: \"_spender\", type: \"address\" },\n        ],\n        name: \"allowance\",\n        outputs: [{ name: \"remaining\", type: \"uint256\" }],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            { name: \"_initialAmount\", type: \"uint256\" },\n            {\n                name: \"_tokenName\",\n                type: \"string\",\n            },\n            { name: \"_decimalUnits\", type: \"uint8\" },\n            { name: \"_tokenSymbol\", type: \"string\" },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"constructor\",\n    },\n    { payable: false, stateMutability: \"nonpayable\", type: \"fallback\" },\n    {\n        anonymous: false,\n        inputs: [\n            { indexed: true, name: \"_from\", type: \"address\" },\n            {\n                indexed: true,\n                name: \"_to\",\n                type: \"address\",\n            },\n            { indexed: false, name: \"_value\", type: \"uint256\" },\n        ],\n        name: \"Transfer\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            { indexed: true, name: \"_owner\", type: \"address\" },\n            {\n                indexed: true,\n                name: \"_spender\",\n                type: \"address\",\n            },\n            { indexed: false, name: \"_value\", type: \"uint256\" },\n        ],\n        name: \"Approval\",\n        type: \"event\",\n    },\n];\nconst abi = {\n    \"ETH\": ethABI,\n    \"BSC\": ethABI,\n};\nexport default abi;\n",";\nexport const CHAINID_2_SYMBOL = {\n    1: \"ETH\",\n    56: \"BSC\",\n};\nexport const SYMBOL_2_CHAINID = {\n    \"BSC\": 56,\n    \"ETH\": 1,\n    \"MATIC\": 137,\n};\nexport const NETWORKS = [\"ETH\", \"BSC\", \"SOL\"];\nexport const NETWORK_TOKEN = {\n    BSC: {\n        _id: \"BNB0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeBSC\",\n        name: \"Binance Coin\",\n        address: \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\n        symbol: \"BNB\",\n        decimals: 18,\n    },\n    ETH: {\n        _id: \"ETH0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeETH\",\n        name: \"Ethereum\",\n        address: \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\n        symbol: \"ETH\",\n        decimals: 18,\n    },\n    SOL: {\n        _id: \"SOL0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeSPL\",\n        name: \"Solana\",\n        address: \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\n        symbol: \"SOL\",\n        decimals: 9,\n    },\n};\n","import axios from \"axios\";\n\nconst API_URL = \"https://api.unmarshal.com\";\nconst KEY = \"t3CB1qwJw84EGoIy6x3nM1472AeLya4EaVTfFO44\";\n\n// SOL\nconst BASE_URL = \"https://api.solscan.io/\";\nconst API = axios.create({\n  baseURL: BASE_URL,\n});\n\n\nexport interface Params {\n  auth_key: string,\n  page: number,\n  pageSize: number,\n  contract?: string\n}\n\nexport function getTransactionsApi(walletAddress: string, chainId: string, contractAddress: string, page = 1) {\n  const url = API_URL + `/v2/${chainId}/address/${walletAddress}/transactions`;\n\n  const params: Params = {\n    auth_key: KEY,\n    page: page,\n    pageSize: 50,\n  };\n  if (contractAddress) {\n    params.contract = contractAddress;\n  }\n  return axios.get(url, {\n    params: params,\n  });\n}\n\nexport function getTokenBalancesApi(walletAddress: string, chainId: string) {\n  const url = API_URL + `/v2/${chainId}/address/${walletAddress}/assets`;\n\n  const params = {\n    auth_key: KEY,\n  };\n  return axios.get(url, {\n    params: params,\n  });\n}\n\n///\nexport function getAccountApi(address: string) {\n    const url = BASE_URL + \"account\";\n    return axios.get(url, {\n      params: { address },\n    });\n  }\n  \n  export function getTokenMetaApi(tokenAddress: string) {\n    const url = BASE_URL + \"token/meta\";\n    return API.get(url, {\n      params: { token: tokenAddress },\n    });\n  }\n  \n","import { BigNumber } from '@ethersproject/bignumber';\nimport { Wallet } from '@ethersproject/wallet';\nimport { JsonRpcProvider } from '@ethersproject/providers';\nimport { Contract } from '@ethersproject/contracts';\nimport { formatUnits } from \"@ethersproject/units\";\nimport * as _type from \"./types\";\nimport { Network } from \"./Network\";\nimport abi from \"./config/abi\";\nimport { SYMBOL_2_CHAINID } from \"./config/constants\";\nimport Web3 from \"web3\";\nimport { getTokenBalancesApi } from \"./utils\";\n\nexport default class ERC20 extends Network {\n  _provider: any;\n\n  constructor(config: _type.NetworkInfo) {\n    //\n    const native_token: _type.NativeToken = {\n      name: config.native_token.name, \n      symbol: config.native_token.symbol, \n      decimals: config.native_token.decimals, \n      address: config.native_token.address\n    }\n    super(\n      config.name,\n      config.rpc_url,\n      config.chain_id,\n      config.symbol,\n      native_token,\n      config.explorer_url\n    );\n    this._provider = new JsonRpcProvider(this.rpcURL);\n  }\n\n  set provider(value: any) {\n    this._provider = value;\n  }\n\n  async getContractMetadata(contractAddress: string): Promise<_type.Contract> {\n    const contract = new Contract(contractAddress, abi[this.symbol], this._provider);\n    const name = await contract.functions.name();\n    const decimals = await contract.functions.decimals();\n    const symbol = await contract.functions.symbol();\n    return {\n      name: name[0],\n      decimals: decimals[0],\n      symbol: symbol[0],\n      address: contractAddress,\n      icon_url: \"https://d1j8r0kxyu9tj8.cloudfront.net/files/1628005162N7PDZHhVuV8nXQf.png\",\n    };\n  }\n\n  getProvider() {\n    return this._provider;\n  }\n\n  async getBalance(address: string): Promise<string> {\n    return await this._provider.getBalance(address).toString();\n  }\n\n  getSigner(wallet: Wallet): any {\n    return wallet.connect(this._provider);\n  }\n\n  async createTransactionOrder(\n    wallet: Wallet,\n    order: _type.OrderRequest\n  ): Promise<_type.TransactionRequest> {\n    if (order.gas && !order.gasLimit) {\n      order.gasLimit = order.gas;\n      delete order.gas;\n    }\n\n    wallet = this.getSigner(wallet);\n\n    const transactionRequest = await wallet.populateTransaction(order);\n\n    const maxPriorityFeePerGas = BigNumber.from(\"2000000000\");\n\n    return {\n      from: transactionRequest.from,\n      to: transactionRequest.to,\n      nonce: BigNumber.from(transactionRequest.nonce).toString(),\n      data: transactionRequest.data?.toString(),\n      value: BigNumber.from(transactionRequest.value ?? \"0\").toString(),\n      maxPriorityFeePerGas: BigNumber.from(maxPriorityFeePerGas).toString(),\n      maxFeePerGas: BigNumber.from(transactionRequest.maxFeePerGas).toString(),\n      gasLimit: BigNumber.from(transactionRequest.gasLimit).toString(),\n      gasPrice: BigNumber.from(transactionRequest.maxFeePerGas).toString(),\n      gasFee: BigNumber.from(transactionRequest.maxFeePerGas)\n        .add(maxPriorityFeePerGas)\n        .mul(<string>transactionRequest.gasLimit)\n        .toString(),\n    };\n  }\n\n  async sendTransaction(\n    wallet: Wallet,\n    transactionRequest: _type.TransactionRequest\n  ): Promise<_type.TransactionResponse> {\n    const transaction = {\n      type: 2,\n      from: transactionRequest.from,\n      to: transactionRequest.to,\n      nonce: Number.parseInt(transactionRequest.nonce!, 10),\n      data: transactionRequest.data?.toString(),\n      value: BigNumber.from(transactionRequest.value),\n      maxPriorityFeePerGas: BigNumber.from(transactionRequest.maxPriorityFeePerGas),\n      maxFeePerGas: BigNumber.from(transactionRequest.maxFeePerGas),\n      gasLimit: BigNumber.from(transactionRequest.gasLimit),\n    };\n\n    wallet = this.getSigner(wallet);\n\n    const transactionResponse = await wallet.sendTransaction(transaction);\n\n    return {\n      tx: transactionResponse.hash,\n      from: transactionResponse.from,\n      to: transactionResponse.to,\n      nonce: transactionResponse.nonce.toString(),\n      data: transactionResponse.data?.toString(),\n      value: formatUnits(transactionResponse.value, this.nativeToken.decimals),\n      maxFeePerGas: BigNumber.from(transactionResponse.maxFeePerGas).toString(),\n      maxPriorityFeePerGas: BigNumber.from(transactionResponse.maxPriorityFeePerGas).toString(),\n      gasLimit: BigNumber.from(transactionResponse.gasLimit).toString(),\n      gasPrice: BigNumber.from(transactionResponse.maxFeePerGas).toString(),\n      gasFee: BigNumber.from(transactionResponse.maxFeePerGas)\n        .add(BigNumber.from(transactionResponse.maxPriorityFeePerGas))\n        .mul(transactionResponse.gasLimit)\n        .toString(),\n    };\n  }\n\n  async getTokenBalances(walletAddress: string): Promise<_type.TokenBalance[]> {\n    const res = await getTokenBalancesApi(walletAddress, SYMBOL_2_CHAINID[this.symbol].toString());\n    let tokensBalances = [];\n    if (res.data) {\n      tokensBalances = res.data.map((item:any) => {\n        return {\n          address: item.contract_address,\n          symbol: item.contract_ticker_symbol,\n          network: this.symbol,\n          amount: formatUnits(item.balance, item.contract_decimals),\n        };\n      });\n    }\n    return tokensBalances;\n  }\n\n  checkAddress(address: string): boolean {\n    if (address.length == 42 && address.slice(0, 2) == \"0x\") {\n      const re = /^[0-9A-Fa-f]*$/g;\n      return re.test(address.slice(2));\n    }\n    return false;\n  }\n\n  onTransactionConfirmed(tx: string, callback: any) {\n    setTimeout(() => {\n      this._provider\n        .getTransaction(tx)\n        .then((transaction: any) => {\n          if (transaction) {\n            transaction\n              .wait()\n              .then((receipt: any) => {\n                callback({\n                  tx,\n                  block: receipt.blockNumber,\n                  fee: receipt.gasUsed?.mul(transaction.gasPrice).toString(),\n                  status: receipt.status ? \"completed\" : \"error\",\n                });\n              })\n              .catch((e: any) => {\n                console.log(\"onTransactionConfirmed1\" + e);\n                callback();\n              });\n          } else {\n            this.onTransactionConfirmed(tx, callback);\n          }\n        })\n        .catch((e: any) => {\n          console.log(\"onTransactionConfirmed2\" + e);\n          callback();\n        });\n    }, 2000);\n  }\n\n  getExplorerUrl(type: string, value: string): string {\n    switch (type) {\n      case \"token\":\n        return this.explorerUrl + \"/token/\" + value;\n      case \"address\":\n        return this.explorerUrl + \"/address/\" + value;\n      case \"transaction\":\n        return this.explorerUrl + \"/tx/\" + value;\n      default:\n        return this.explorerUrl;\n    }\n  }\n\n  signMessage(wallet: Wallet, message: string): any {\n    const web3 = new Web3();\n    return web3.eth.accounts.sign(message, wallet.privateKey).signature;\n  }\n}\n","import { BigNumber } from '@ethersproject/bignumber';\nimport { JsonRpcProvider } from '@ethersproject/providers';\nimport { Wallet } from '@ethersproject/wallet';\nimport { Contract } from '@ethersproject/contracts';\nimport { formatUnits } from \"@ethersproject/units\";\nimport Web3 from \"web3\";\nimport { SYMBOL_2_CHAINID } from \"./config/constants\";\nimport abi from \"./config/abi\";\nimport { Network } from \"./Network\";\nimport * as _type from \"./types\";\nimport { getTokenBalancesApi } from \"./utils\";\n\n\n\nexport default class BEP20 extends Network {\n  _provider: any;\n\n  constructor(config: _type.NetworkInfo) {\n    //\n    const native_token: _type.NativeToken = {\n      name: config.native_token.name, \n      symbol: config.native_token.symbol, \n      decimals: config.native_token.decimals, \n      address: config.native_token.address\n    }\n    super(\n      config.name,\n      config.rpc_url,\n      config.chain_id,\n      config.symbol,\n      native_token,\n      config.explorer_url\n    );\n    this._provider = new JsonRpcProvider(this.rpcURL);\n  }\n\n  set provider(value: any) {\n    this._provider = value;\n  }\n\n  async getContractMetadata(contractAddress: string): Promise<_type.Contract> {\n    const contract = new Contract(contractAddress, abi[this.symbol], this._provider);\n    const name = await contract.functions.name();\n    const decimals = await contract.functions.decimals();\n    const symbol = await contract.functions.symbol();\n    return {\n      name: name[0],\n      decimals: decimals[0],\n      symbol: symbol[0],\n      address: contractAddress,\n      icon_url: \"https://d1j8r0kxyu9tj8.cloudfront.net/files/1628005345XtePsjK1WdF2qlN.png\",\n    };\n  }\n\n  getProvider(): any {\n    return this._provider;\n  }\n\n  async getBalance(address: string): Promise<string> {\n    return await this._provider.getBalance(address).toString();\n  }\n\n  async createTransactionOrder(wallet: Wallet, order: _type.OrderRequest): Promise<_type.TransactionRequest> {\n    if (order.gas && !order.gasLimit) {\n      order.gasLimit = order.gas;\n      delete order.gas;\n    }\n\n    wallet = this.getSigner(wallet);\n\n    console.log(order);\n\n    const transactionRequest = await wallet.populateTransaction(order);\n\n    return {\n      from: transactionRequest.from,\n      to: transactionRequest.to,\n      nonce: transactionRequest.nonce?.toString(),\n      value: BigNumber.from(transactionRequest.value ?? \"0\").toString(),\n      data: transactionRequest.data?.toString(),\n      gasPrice: BigNumber.from(transactionRequest.gasPrice).toString(),\n      gasLimit: BigNumber.from(transactionRequest.gasLimit).toString(),\n      gasFee: BigNumber.from(transactionRequest.gasPrice).mul(<string>transactionRequest.gasLimit).toString(),\n    };\n  }\n\n  async sendTransaction(\n    wallet: Wallet,\n    transactionRequest: _type.TransactionRequest\n  ): Promise<_type.TransactionResponse> {\n    const transaction = {\n      from: transactionRequest.from,\n      to: transactionRequest.to,\n      nonce: Number.parseInt(transactionRequest.nonce!),\n      data: transactionRequest.data?.toString(),\n      value: BigNumber.from(transactionRequest.value?.toString()),\n      gasPrice: BigNumber.from(transactionRequest.gasPrice?.toString()),\n      gasLimit: BigNumber.from(transactionRequest.gasLimit?.toString()),\n    };\n\n    wallet = this.getSigner(wallet);\n\n    const transactionResponse = await wallet.sendTransaction(transaction);\n\n    return {\n      tx: transactionResponse.hash,\n      from: transactionResponse.from,\n      to: transactionResponse.to,\n      nonce: transactionResponse.nonce.toString(),\n      value: transactionResponse.value?.toString(),\n      data: transactionResponse.data?.toString(),\n      gasPrice: transactionResponse.gasPrice?.toString(),\n      gasLimit: transactionResponse.gasLimit.toString(),\n      gasFee: BigNumber.from(transactionResponse.gasPrice).mul(transactionResponse.gasLimit).toString(),\n    };\n  }\n\n  async getTokenBalances(walletAddress: string): Promise<_type.TokenBalance[]> {\n    const res = await getTokenBalancesApi(walletAddress, SYMBOL_2_CHAINID[this.symbol].toString());\n    let tokensBalances = [];\n    if (res.data) {\n      tokensBalances = res.data.map((item: any) => {\n        return {\n          address: item.contract_address,\n          symbol: item.contract_ticker_symbol,\n          network: this.symbol,\n          amount: formatUnits(item.balance, item.contract_decimals),\n        };\n      });\n    }\n    return tokensBalances;\n  }\n\n  checkAddress(address: string): boolean {\n    if (address.length == 42 && address.slice(0, 2) == \"0x\") {\n      const re = /^[0-9A-Fa-f]*$/g;\n      return re.test(address.slice(2));\n    }\n    return false;\n  }\n\n  onTransactionConfirmed(tx: string, callback: any): void {\n    setTimeout(() => {\n      this._provider\n        .getTransaction(tx)\n        .then((transaction: any) => {\n          if (transaction) {\n            transaction\n              .wait()\n              .then((receipt: any) => {\n                callback({\n                  tx,\n                  block: receipt.blockNumber,\n                  fee: receipt.gasUsed?.mul(transaction.gasPrice).toString(),\n                  status: receipt.status ? \"completed\" : \"error\",\n                });\n              })\n              .catch((e: any) => {\n                console.log(\"onTransactionConfirmed1\" + e);\n                callback();\n              });\n          } else {\n            this.onTransactionConfirmed(tx, callback);\n          }\n        })\n        .catch((e: any) => {\n          console.log(\"onTransactionConfirmed2\" + e);\n          callback();\n        });\n    }, 2000);\n  }\n\n  getExplorerUrl(type: string, value: string): string {\n    switch (type) {\n      case \"token\":\n        return this.explorerUrl + \"/token/\" + value;\n      case \"address\":\n        return this.explorerUrl + \"/address/\" + value;\n      case \"transaction\":\n        return this.explorerUrl + \"/tx/\" + value;\n      default:\n        return this.explorerUrl;\n    }\n  }\n\n  signMessage(wallet: Wallet, message: string): any {\n    const web3 = new Web3();\n    return web3.eth.accounts.sign(message, wallet.privateKey).signature;\n  }\n}\n","import * as _type from \"./types\";\nimport { Network } from \"./Network\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { getTokenMetaApi } from \"./utils\";\nimport nacl from \"tweetnacl\";\nimport { SolanaWallet } from \"@coreproject/wallets\";\nimport { Connection, PublicKey } from \"@solana/web3.js\";\n// @ts-ignore\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\n\nexport default class SPL extends Network {\n  _provider: Connection;\n\n  constructor(config: _type.NetworkInfo) {\n    //\n    const native_token: _type.NativeToken = {\n      name: config.native_token.name, \n      symbol: config.native_token.symbol, \n      decimals: config.native_token.decimals, \n      address: config.native_token.address\n    }\n    super(\n      config.name,\n      config.rpc_url,\n      config.chain_id,\n      config.symbol,\n      native_token,\n      config.explorer_url\n    );\n    this._provider = new Connection(this.rpcURL);\n  }\n\n  async getContractMetadata(contractAddress: string): Promise<_type.Contract | null>{\n    const res = await getTokenMetaApi(contractAddress);\n    const tokenInfo = res.data?.data;\n    if (tokenInfo) {\n      return {\n        name: tokenInfo?.name,\n        decimals: tokenInfo?.decimals,\n        symbol: tokenInfo?.symbol,\n        address: contractAddress,\n        icon_url: tokenInfo?.icon,\n      };\n    }\n\n    return null;\n  }\n\n  getProvider() {\n    return this._provider;\n  }\n\n  async getBalance(address: string): Promise<string> {\n    return (await this._provider.getBalance(new PublicKey(address))).toString();\n  }\n\n  async getTokenBalances(walletAddress: string): Promise<_type.TokenBalance[]> {\n    const result = await this._provider.getParsedTokenAccountsByOwner(new PublicKey(walletAddress), {\n      programId: TOKEN_PROGRAM_ID,\n    });\n\n    const balanceNativeToken = await this.getBalance(walletAddress);\n    const amountNativeToken = formatUnits(balanceNativeToken, this.nativeToken.decimals);\n\n    let tokensBalances = result.value.map(item => {\n      return {\n        address: item?.account?.data?.parsed?.info?.mint,\n        amount: item?.account?.data?.parsed?.info?.tokenAmount?.uiAmountString,\n        network: this.symbol,\n      };\n    });\n\n    tokensBalances = [\n      ...tokensBalances,\n      {\n        address: this.nativeToken.address,\n        network: this.symbol,\n        amount: amountNativeToken,\n      },\n    ];\n\n    return tokensBalances;\n  }\n\n  checkAddress(address: string): boolean {\n    try {\n      const publicKey = new PublicKey(address);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  onTransactionConfirmed(tx: string, callback: any) {\n    setTimeout(() => {\n      try {\n        this._provider.onSignature(\n          tx,\n          async () => {\n            const data = await this._provider.getConfirmedTransaction(tx);\n            callback({\n              tx,\n              block: data?.slot,\n              fee: data?.meta?.fee?.toString(),\n              status: !data?.meta?.err ? \"completed\" : \"error\",\n            });\n          },\n          \"finalized\",\n        );\n      } catch (e) {\n        console.log(\"SPL.onTransactionConfirmed\" + e);\n      }\n    }, 2000);\n  }\n\n  getExplorerUrl(type: string, value: string): string {\n    switch (type) {\n      case \"token\":\n        return this.explorerUrl + \"/token/\" + value;\n      case \"address\":\n        return this.explorerUrl + \"/account/\" + value;\n      case \"transaction\":\n        return this.explorerUrl + \"/tx/\" + value;\n      default:\n        return this.explorerUrl;\n    }\n  }\n\n  signMessage(wallet: SolanaWallet, message: any): any {\n    return nacl.sign.detached(message, wallet.provider.secretKey);\n  }\n}\n","import ERC20 from \"./ERC20\";\nimport BEP20 from \"./BEP20\";\nimport SPL from \"./SPL\";\n\nexport const SUFFIX_NFT_NETWORK = \"NFT\";\n\nexport {\n  ERC20,\n  BEP20,\n  SPL\n}"],"names":["Network","constructor","name","rpcURL","chainID","symbol","nativeToken","explorerUrl","Error","getContractMetadata","contractAddress","getBalance","address","getSigner","wallet","getTransactionFee","gasFee","formatUnits","toString","decimals","getUnitCost","createTransactionOrder","order","sendTransaction","transactionRequest","getTokenBalances","walletAddress","checkAddress","onTransactionConfirmed","txHash","callback","getExplorerUrl","type","value","signMessage","message","ethABI","constant","inputs","outputs","payable","stateMutability","anonymous","indexed","abi","SYMBOL_2_CHAINID","API_URL","KEY","BASE_URL","API","axios","create","baseURL","getTokenBalancesApi","chainId","url","params","auth_key","get","getTokenMetaApi","tokenAddress","token","ERC20","config","native_token","rpc_url","chain_id","explorer_url","_provider","JsonRpcProvider","provider","contract","Contract","functions","icon_url","getProvider","connect","gas","gasLimit","populateTransaction","maxPriorityFeePerGas","BigNumber","from","to","nonce","data","maxFeePerGas","gasPrice","add","mul","transaction","Number","parseInt","transactionResponse","tx","hash","res","tokensBalances","map","item","contract_address","contract_ticker_symbol","network","amount","balance","contract_decimals","length","slice","re","test","setTimeout","getTransaction","then","wait","receipt","block","blockNumber","fee","gasUsed","status","catch","e","console","log","web3","Web3","eth","accounts","sign","privateKey","signature","BEP20","SPL","Connection","tokenInfo","icon","PublicKey","result","getParsedTokenAccountsByOwner","programId","TOKEN_PROGRAM_ID","balanceNativeToken","amountNativeToken","account","parsed","info","mint","tokenAmount","uiAmountString","publicKey","onSignature","getConfirmedTransaction","slot","meta","err","nacl","detached","secretKey","SUFFIX_NFT_NETWORK"],"mappings":"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"}