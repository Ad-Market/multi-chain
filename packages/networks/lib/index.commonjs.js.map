{"version":3,"file":"index.commonjs.js","sources":["../src/Network.ts","../src/config/abi.ts","../src/config/constants.ts","../src/utils.ts","../src/ERC20.ts","../src/BEP20.ts","../src/SPL.ts","../src/index.ts"],"sourcesContent":["import { formatUnits } from \"@ethersproject/units\";\nimport * as _type from \"./types\"\n\nexport class Network {\n\n  nativeToken: _type.NativeToken;\n  name: string;\n  rpcURL: string;\n  chainID: number;\n  symbol: string;\n  explorerUrl: string;\n\n  constructor(\n    web3_provider: _type.Web3Provider,\n    network_info: _type.NetworkInfo\n  ) {\n    this.rpcURL = web3_provider.rpcUrl;\n    this.explorerUrl = web3_provider.explorer;\n    this.name = network_info.name;\n    this.chainID = network_info.chain_id;\n    this.symbol = network_info.symbol;\n    //\n    const native_token: _type.NativeToken = {\n      name: network_info.native_token.name, \n      symbol: network_info.native_token.symbol, \n      decimals: network_info.native_token.decimals, \n      address: network_info.native_token.address\n    }\n    this.nativeToken = native_token;\n  }\n\n  async getContractMetadata(contractAddress: string): Promise<_type.Contract | null> {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n\n  async getBalance(address: string): Promise<string> {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n\n  getSigner(wallet: any): any {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n\n  getTransactionFee(gasFee: string): string {\n    return formatUnits(gasFee.toString(), this.nativeToken.decimals);\n  }\n\n  getUnitCost(): string {\n    return this.nativeToken.symbol;\n  }\n\n  async createTransactionOrder(wallet: any, order: _type.OrderRequest): Promise<_type.TransactionRequest> {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n\n  async sendTransaction(wallet: any, transactionRequest: _type.TransactionRequest): Promise<_type.TransactionResponse> {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n\n  async getTokenBalances(walletAddress: string): Promise<_type.TokenBalance[]> {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n\n  checkAddress(address: string): boolean {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n\n  onTransactionConfirmed(txHash: string, callback: any) {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n\n  getExplorerUrl(type: string, value: string): string {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n\n  signMessage(wallet: any, message: string): any {\n    throw new Error(\"Abstract Method has no implementation\");\n  }\n}\n","const ethABI: Array<object> = [\n    {\n      constant: true,\n      inputs: [],\n      name: \"name\",\n      outputs: [{ name: \"\", type: \"string\" }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: false,\n      inputs: [\n        { name: \"_spender\", type: \"address\" },\n        { name: \"_value\", type: \"uint256\" },\n      ],\n      name: \"approve\",\n      outputs: [{ name: \"success\", type: \"bool\" }],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: \"totalSupply\",\n      outputs: [{ name: \"\", type: \"uint256\" }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: false,\n      inputs: [\n        { name: \"_from\", type: \"address\" },\n        { name: \"_to\", type: \"address\" },\n        {\n          name: \"_value\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"transferFrom\",\n      outputs: [{ name: \"success\", type: \"bool\" }],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: \"decimals\",\n      outputs: [{ name: \"\", type: \"uint8\" }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: \"version\",\n      outputs: [{ name: \"\", type: \"string\" }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: true,\n      inputs: [{ name: \"_owner\", type: \"address\" }],\n      name: \"balanceOf\",\n      outputs: [{ name: \"balance\", type: \"uint256\" }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: \"symbol\",\n      outputs: [{ name: \"\", type: \"string\" }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: false,\n      inputs: [\n        { name: \"_to\", type: \"address\" },\n        { name: \"_value\", type: \"uint256\" },\n      ],\n      name: \"transfer\",\n      outputs: [{ name: \"success\", type: \"bool\" }],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      constant: true,\n      inputs: [\n        { name: \"_owner\", type: \"address\" },\n        { name: \"_spender\", type: \"address\" },\n      ],\n      name: \"allowance\",\n      outputs: [{ name: \"remaining\", type: \"uint256\" }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        { name: \"_initialAmount\", type: \"uint256\" },\n        {\n          name: \"_tokenName\",\n          type: \"string\",\n        },\n        { name: \"_decimalUnits\", type: \"uint8\" },\n        { name: \"_tokenSymbol\", type: \"string\" },\n      ],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"constructor\",\n    },\n    { payable: false, stateMutability: \"nonpayable\", type: \"fallback\" },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: true, name: \"_from\", type: \"address\" },\n        {\n          indexed: true,\n          name: \"_to\",\n          type: \"address\",\n        },\n        { indexed: false, name: \"_value\", type: \"uint256\" },\n      ],\n      name: \"Transfer\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: true, name: \"_owner\", type: \"address\" },\n        {\n          indexed: true,\n          name: \"_spender\",\n          type: \"address\",\n        },\n        { indexed: false, name: \"_value\", type: \"uint256\" },\n      ],\n      name: \"Approval\",\n      type: \"event\",\n    },\n  ];\n\ninterface Iabi {[key: string]: Array<object>}\nconst abi: Iabi = {\n  \"ETH\": ethABI,\n  \"BSC\": ethABI,\n};\n  \nexport default abi;","interface IChainID {\n   [key: string]: number\n};\n\nexport const CHAINID_2_SYMBOL = {\n    1: \"ETH\",\n    56: \"BSC\",\n  };\n  \nexport const SYMBOL_2_CHAINID: IChainID = {\n    \"BSC\": 56,\n    \"ETH\": 1,\n    \"MATIC\": 137,\n};\n  \nexport const NETWORKS = [\"ETH\", \"BSC\", \"SOL\"];\n\nexport const NETWORK_TOKEN = {\n  BSC: {\n    _id: \"BNB0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeBSC\",\n    name: \"Binance Coin\",\n    address: \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\n    symbol: \"BNB\",\n    decimals: 18,\n  },\n  ETH: {\n    _id: \"ETH0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeETH\",\n    name: \"Ethereum\",\n    address: \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\n    symbol: \"ETH\",\n    decimals: 18,\n  },\n  SOL: {\n    _id: \"SOL0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeSPL\",\n    name: \"Solana\",\n    address: \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\n    symbol: \"SOL\",\n    decimals: 9,\n  },\n};\n","import axios from \"axios\";\n\nconst API_URL = \"https://api.unmarshal.com\";\nconst KEY = \"t3CB1qwJw84EGoIy6x3nM1472AeLya4EaVTfFO44\";\n\n// SOL\nconst BASE_URL = \"https://api.solscan.io/\";\nconst API = axios.create({\n  baseURL: BASE_URL,\n});\n\n\nexport interface Params {\n  auth_key: string,\n  page: number,\n  pageSize: number,\n  contract?: string\n}\n\nexport function getTransactionsApi(walletAddress: string, chainId: string, contractAddress: string, page = 1) {\n  const url = API_URL + `/v2/${chainId}/address/${walletAddress}/transactions`;\n\n  const params: Params = {\n    auth_key: KEY,\n    page: page,\n    pageSize: 50,\n  };\n  if (contractAddress) {\n    params.contract = contractAddress;\n  }\n  return axios.get(url, {\n    params: params,\n  });\n}\n\nexport function getTokenBalancesApi(walletAddress: string, chainId: string) {\n  const url = API_URL + `/v2/${chainId}/address/${walletAddress}/assets`;\n\n  const params = {\n    auth_key: KEY,\n  };\n  return axios.get(url, {\n    params: params,\n  });\n}\n\n///\nexport function getAccountApi(address: string) {\n    const url = BASE_URL + \"account\";\n    return axios.get(url, {\n      params: { address },\n    });\n  }\n  \n  export function getTokenMetaApi(tokenAddress: string) {\n    const url = BASE_URL + \"token/meta\";\n    return API.get(url, {\n      params: { token: tokenAddress },\n    });\n  }\n  \n","import { BigNumber } from '@ethersproject/bignumber';\nimport { Wallet } from '@ethersproject/wallet';\nimport { JsonRpcProvider } from '@ethersproject/providers';\nimport { Contract } from '@ethersproject/contracts';\nimport { formatUnits } from \"@ethersproject/units\";\nimport * as _type from \"./types\";\nimport { Network } from \"./Network\";\nimport abi from \"./config/abi\";\nimport { SYMBOL_2_CHAINID } from \"./config/constants\";\nimport Web3 from \"web3\";\nimport { getTokenBalancesApi } from \"./utils\";\n\nexport default class ERC20 extends Network {\n  _provider: any;\n\n  constructor(web3_providers: _type.Web3Provider,\n    network_info: _type.NetworkInfo\n  ){\n    super(web3_providers, network_info);\n    this._provider = new JsonRpcProvider(this.rpcURL);\n  }\n\n  set provider(value: any) {\n    this._provider = value;\n  }\n\n  async getContractMetadata(contractAddress: string): Promise<_type.Contract> {\n    const contract = new Contract(contractAddress, abi[this.symbol], this._provider);\n    const name = await contract.functions.name();\n    const decimals = await contract.functions.decimals();\n    const symbol = await contract.functions.symbol();\n    return {\n      name: name[0],\n      decimals: decimals[0],\n      symbol: symbol[0],\n      address: contractAddress,\n      icon_url: \"https://d1j8r0kxyu9tj8.cloudfront.net/files/1628005162N7PDZHhVuV8nXQf.png\",\n    };\n  }\n\n  getProvider() {\n    return this._provider;\n  }\n\n  async getBalance(address: string): Promise<string> {\n    return await this._provider.getBalance(address).toString();\n  }\n\n  getSigner(wallet: Wallet): any {\n    return wallet.connect(this._provider);\n  }\n\n  async createTransactionOrder(\n    wallet: Wallet,\n    order: _type.OrderRequest\n  ): Promise<_type.TransactionRequest> {\n    if (order.gas && !order.gasLimit) {\n      order.gasLimit = order.gas;\n      delete order.gas;\n    }\n\n    wallet = this.getSigner(wallet);\n\n    const transactionRequest = await wallet.populateTransaction(order);\n\n    const maxPriorityFeePerGas = BigNumber.from(\"2000000000\");\n\n    return {\n      from: transactionRequest.from,\n      to: transactionRequest.to,\n      nonce: BigNumber.from(transactionRequest.nonce).toString(),\n      data: transactionRequest.data?.toString(),\n      value: BigNumber.from(transactionRequest.value ?? \"0\").toString(),\n      maxPriorityFeePerGas: BigNumber.from(maxPriorityFeePerGas).toString(),\n      maxFeePerGas: BigNumber.from(transactionRequest.maxFeePerGas).toString(),\n      gasLimit: BigNumber.from(transactionRequest.gasLimit).toString(),\n      gasPrice: BigNumber.from(transactionRequest.maxFeePerGas).toString(),\n      gasFee: BigNumber.from(transactionRequest.maxFeePerGas)\n        .add(maxPriorityFeePerGas)\n        .mul(<string>transactionRequest.gasLimit)\n        .toString(),\n    };\n  }\n\n  async sendTransaction(\n    wallet: Wallet,\n    transactionRequest: _type.TransactionRequest\n  ): Promise<_type.TransactionResponse> {\n    const transaction = {\n      type: 2,\n      from: transactionRequest.from,\n      to: transactionRequest.to,\n      nonce: Number.parseInt(transactionRequest.nonce!, 10),\n      data: transactionRequest.data?.toString(),\n      value: BigNumber.from(transactionRequest.value),\n      maxPriorityFeePerGas: BigNumber.from(transactionRequest.maxPriorityFeePerGas),\n      maxFeePerGas: BigNumber.from(transactionRequest.maxFeePerGas),\n      gasLimit: BigNumber.from(transactionRequest.gasLimit),\n    };\n\n    wallet = this.getSigner(wallet);\n\n    const transactionResponse = await wallet.sendTransaction(transaction);\n\n    return {\n      tx: transactionResponse.hash,\n      from: transactionResponse.from,\n      to: transactionResponse.to,\n      nonce: transactionResponse.nonce.toString(),\n      data: transactionResponse.data?.toString(),\n      value: formatUnits(transactionResponse.value, this.nativeToken.decimals),\n      maxFeePerGas: BigNumber.from(transactionResponse.maxFeePerGas).toString(),\n      maxPriorityFeePerGas: BigNumber.from(transactionResponse.maxPriorityFeePerGas).toString(),\n      gasLimit: BigNumber.from(transactionResponse.gasLimit).toString(),\n      gasPrice: BigNumber.from(transactionResponse.maxFeePerGas).toString(),\n      gasFee: BigNumber.from(transactionResponse.maxFeePerGas)\n        .add(BigNumber.from(transactionResponse.maxPriorityFeePerGas))\n        .mul(transactionResponse.gasLimit)\n        .toString(),\n    };\n  }\n\n  async getTokenBalances(walletAddress: string): Promise<_type.TokenBalance[]> {\n    const res = await getTokenBalancesApi(walletAddress, SYMBOL_2_CHAINID[this.symbol].toString());\n    let tokensBalances = [];\n    if (res.data) {\n      tokensBalances = res.data.map((item:any) => {\n        return {\n          address: item.contract_address,\n          symbol: item.contract_ticker_symbol,\n          network: this.symbol,\n          amount: formatUnits(item.balance, item.contract_decimals),\n        };\n      });\n    }\n    return tokensBalances;\n  }\n\n  checkAddress(address: string): boolean {\n    if (address.length == 42 && address.slice(0, 2) == \"0x\") {\n      const re = /^[0-9A-Fa-f]*$/g;\n      return re.test(address.slice(2));\n    }\n    return false;\n  }\n\n  onTransactionConfirmed(tx: string, callback: any) {\n    setTimeout(() => {\n      this._provider\n        .getTransaction(tx)\n        .then((transaction: any) => {\n          if (transaction) {\n            transaction\n              .wait()\n              .then((receipt: any) => {\n                callback({\n                  tx,\n                  block: receipt.blockNumber,\n                  fee: receipt.gasUsed?.mul(transaction.gasPrice).toString(),\n                  status: receipt.status ? \"completed\" : \"error\",\n                });\n              })\n              .catch((e: any) => {\n                console.log(\"onTransactionConfirmed1\" + e);\n                callback();\n              });\n          } else {\n            this.onTransactionConfirmed(tx, callback);\n          }\n        })\n        .catch((e: any) => {\n          console.log(\"onTransactionConfirmed2\" + e);\n          callback();\n        });\n    }, 2000);\n  }\n\n  getExplorerUrl(type: string, value: string): string {\n    switch (type) {\n      case \"token\":\n        return this.explorerUrl + \"/token/\" + value;\n      case \"address\":\n        return this.explorerUrl + \"/address/\" + value;\n      case \"transaction\":\n        return this.explorerUrl + \"/tx/\" + value;\n      default:\n        return this.explorerUrl;\n    }\n  }\n\n  signMessage(wallet: Wallet, message: string): any {\n    const web3 = new Web3();\n    return web3.eth.accounts.sign(message, wallet.privateKey).signature;\n  }\n}\n","import { BigNumber } from '@ethersproject/bignumber';\nimport { JsonRpcProvider } from '@ethersproject/providers';\nimport { Wallet } from '@ethersproject/wallet';\nimport { Contract } from '@ethersproject/contracts';\nimport { formatUnits } from \"@ethersproject/units\";\nimport Web3 from \"web3\";\nimport { SYMBOL_2_CHAINID } from \"./config/constants\";\nimport abi from \"./config/abi\";\nimport { Network } from \"./Network\";\nimport * as _type from \"./types\";\nimport { getTokenBalancesApi } from \"./utils\";\n\n\n\nexport default class BEP20 extends Network {\n  _provider: any;\n\n  constructor(web3_provider: _type.Web3Provider,\n    network_info: _type.NetworkInfo\n  ){\n    super(web3_provider, network_info);\n    this._provider = new JsonRpcProvider(this.rpcURL);\n  }\n\n  newConfig(web3_provider: _type.Web3Provider, network_info: _type.NetworkInfo){\n    this.rpcURL = web3_provider.rpcUrl;\n    this.explorerUrl = web3_provider.explorer;\n    this.name = network_info.name;\n    this.chainID = network_info.chain_id;\n    this.symbol = network_info.symbol;\n    //\n    const native_token: _type.NativeToken = {\n      name: network_info.native_token.name, \n      symbol: network_info.native_token.symbol, \n      decimals: network_info.native_token.decimals, \n      address: network_info.native_token.address\n    }\n    this.nativeToken = native_token;\n    this._provider = new JsonRpcProvider(this.rpcURL)\n  }\n  async getContractMetadata(contractAddress: string): Promise<_type.Contract> {\n    const contract = new Contract(contractAddress, abi[this.symbol], this._provider);\n    const name = await contract.functions.name();\n    const decimals = await contract.functions.decimals();\n    const symbol = await contract.functions.symbol();\n    return {\n      name: name[0],\n      decimals: decimals[0],\n      symbol: symbol[0],\n      address: contractAddress,\n      icon_url: \"https://d1j8r0kxyu9tj8.cloudfront.net/files/1628005345XtePsjK1WdF2qlN.png\",\n    };\n  }\n\n  getProvider(): any {\n    return this._provider;\n  }\n\n  async getBalance(address: string): Promise<string> {\n    return await this._provider.getBalance(address).toString();\n  }\n\n  async createTransactionOrder(wallet: Wallet, order: _type.OrderRequest): Promise<_type.TransactionRequest> {\n    if (order.gas && !order.gasLimit) {\n      order.gasLimit = order.gas;\n      delete order.gas;\n    }\n\n    wallet = this.getSigner(wallet);\n\n    console.log(order);\n\n    const transactionRequest = await wallet.populateTransaction(order);\n\n    return {\n      from: transactionRequest.from,\n      to: transactionRequest.to,\n      nonce: transactionRequest.nonce?.toString(),\n      value: BigNumber.from(transactionRequest.value ?? \"0\").toString(),\n      data: transactionRequest.data?.toString(),\n      gasPrice: BigNumber.from(transactionRequest.gasPrice).toString(),\n      gasLimit: BigNumber.from(transactionRequest.gasLimit).toString(),\n      gasFee: BigNumber.from(transactionRequest.gasPrice).mul(<string>transactionRequest.gasLimit).toString(),\n    };\n  }\n\n  async sendTransaction(\n    wallet: Wallet,\n    transactionRequest: _type.TransactionRequest\n  ): Promise<_type.TransactionResponse> {\n    const transaction = {\n      from: transactionRequest.from,\n      to: transactionRequest.to,\n      nonce: Number.parseInt(transactionRequest.nonce!),\n      data: transactionRequest.data?.toString(),\n      value: BigNumber.from(transactionRequest.value?.toString()),\n      gasPrice: BigNumber.from(transactionRequest.gasPrice?.toString()),\n      gasLimit: BigNumber.from(transactionRequest.gasLimit?.toString()),\n    };\n\n    wallet = this.getSigner(wallet);\n\n    const transactionResponse = await wallet.sendTransaction(transaction);\n\n    return {\n      tx: transactionResponse.hash,\n      from: transactionResponse.from,\n      to: transactionResponse.to,\n      nonce: transactionResponse.nonce.toString(),\n      value: transactionResponse.value?.toString(),\n      data: transactionResponse.data?.toString(),\n      gasPrice: transactionResponse.gasPrice?.toString(),\n      gasLimit: transactionResponse.gasLimit.toString(),\n      gasFee: BigNumber.from(transactionResponse.gasPrice).mul(transactionResponse.gasLimit).toString(),\n    };\n  }\n\n  async getTokenBalances(walletAddress: string): Promise<_type.TokenBalance[]> {\n    const res = await getTokenBalancesApi(walletAddress, SYMBOL_2_CHAINID[this.symbol].toString());\n    let tokensBalances = [];\n    if (res.data) {\n      tokensBalances = res.data.map((item: any) => {\n        return {\n          address: item.contract_address,\n          symbol: item.contract_ticker_symbol,\n          network: this.symbol,\n          amount: formatUnits(item.balance, item.contract_decimals),\n        };\n      });\n    }\n    return tokensBalances;\n  }\n\n  checkAddress(address: string): boolean {\n    if (address.length == 42 && address.slice(0, 2) == \"0x\") {\n      const re = /^[0-9A-Fa-f]*$/g;\n      return re.test(address.slice(2));\n    }\n    return false;\n  }\n\n  onTransactionConfirmed(tx: string, callback: any): void {\n    setTimeout(() => {\n      this._provider\n        .getTransaction(tx)\n        .then((transaction: any) => {\n          if (transaction) {\n            transaction\n              .wait()\n              .then((receipt: any) => {\n                callback({\n                  tx,\n                  block: receipt.blockNumber,\n                  fee: receipt.gasUsed?.mul(transaction.gasPrice).toString(),\n                  status: receipt.status ? \"completed\" : \"error\",\n                });\n              })\n              .catch((e: any) => {\n                console.log(\"onTransactionConfirmed1\" + e);\n                callback();\n              });\n          } else {\n            this.onTransactionConfirmed(tx, callback);\n          }\n        })\n        .catch((e: any) => {\n          console.log(\"onTransactionConfirmed2\" + e);\n          callback();\n        });\n    }, 2000);\n  }\n\n  getExplorerUrl(type: string, value: string): string {\n    switch (type) {\n      case \"token\":\n        return this.explorerUrl + \"/token/\" + value;\n      case \"address\":\n        return this.explorerUrl + \"/address/\" + value;\n      case \"transaction\":\n        return this.explorerUrl + \"/tx/\" + value;\n      default:\n        return this.explorerUrl;\n    }\n  }\n\n  signMessage(wallet: Wallet, message: string): any {\n    const web3 = new Web3();\n    return web3.eth.accounts.sign(message, wallet.privateKey).signature;\n  }\n}","import * as _type from \"./types\";\nimport { Network } from \"./Network\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { getTokenMetaApi } from \"./utils\";\nimport nacl from \"tweetnacl\";\nimport { SolanaWallet } from \"@coreproject/wallets\";\nimport { Connection, PublicKey } from \"@solana/web3.js\";\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\n\nexport default class SPL extends Network {\n  _provider: Connection;\n\n  constructor(web3_providers: _type.Web3Provider,\n    network_info: _type.NetworkInfo\n  ){\n    super(web3_providers, network_info);\n    this._provider = new Connection(this.rpcURL);\n  }\n\n  async getContractMetadata(contractAddress: string): Promise<_type.Contract | null>{\n    const res = await getTokenMetaApi(contractAddress);\n    const tokenInfo = res.data?.data;\n    if (tokenInfo) {\n      return {\n        name: tokenInfo?.name,\n        decimals: tokenInfo?.decimals,\n        symbol: tokenInfo?.symbol,\n        address: contractAddress,\n        icon_url: tokenInfo?.icon,\n      };\n    }\n\n    return null;\n  }\n\n  getProvider() {\n    return this._provider;\n  }\n\n  async getBalance(address: string): Promise<string> {\n    return (await this._provider.getBalance(new PublicKey(address))).toString();\n  }\n\n  async getTokenBalances(walletAddress: string): Promise<_type.TokenBalance[]> {\n    const result = await this._provider.getParsedTokenAccountsByOwner(new PublicKey(walletAddress), {\n      programId: TOKEN_PROGRAM_ID,\n    });\n\n    const balanceNativeToken = await this.getBalance(walletAddress);\n    const amountNativeToken = formatUnits(balanceNativeToken, this.nativeToken.decimals);\n\n    let tokensBalances = result.value.map(item => {\n      return {\n        address: item?.account?.data?.parsed?.info?.mint,\n        amount: item?.account?.data?.parsed?.info?.tokenAmount?.uiAmountString,\n        network: this.symbol,\n      };\n    });\n\n    tokensBalances = [\n      ...tokensBalances,\n      {\n        address: this.nativeToken.address,\n        network: this.symbol,\n        amount: amountNativeToken,\n      },\n    ];\n\n    return tokensBalances;\n  }\n\n  checkAddress(address: string): boolean {\n    try {\n      const publicKey = new PublicKey(address);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  onTransactionConfirmed(tx: string, callback: any) {\n    setTimeout(() => {\n      try {\n        this._provider.onSignature(\n          tx,\n          async () => {\n            const data = await this._provider.getConfirmedTransaction(tx);\n            callback({\n              tx,\n              block: data?.slot,\n              fee: data?.meta?.fee?.toString(),\n              status: !data?.meta?.err ? \"completed\" : \"error\",\n            });\n          },\n          \"finalized\",\n        );\n      } catch (e) {\n        console.log(\"SPL.onTransactionConfirmed\" + e);\n      }\n    }, 2000);\n  }\n\n  getExplorerUrl(type: string, value: string): string {\n    switch (type) {\n      case \"token\":\n        return this.explorerUrl + \"/token/\" + value;\n      case \"address\":\n        return this.explorerUrl + \"/account/\" + value;\n      case \"transaction\":\n        return this.explorerUrl + \"/tx/\" + value;\n      default:\n        return this.explorerUrl;\n    }\n  }\n\n  signMessage(wallet: SolanaWallet, message: any): any {\n    return nacl.sign.detached(message, wallet.provider.secretKey);\n  }\n}\n","import ERC20 from \"./ERC20\";\nimport BEP20 from \"./BEP20\";\nimport SPL from \"./SPL\";\n// ----------------------------------\nexport const SUFFIX_NFT_NETWORK = \"NFT\";\n\n//\n// ----- TEST \nimport * as mainet from './config/net.json'\nimport * as _type from \"./types\";\n\nconst TESTNET_PROVIDER: _type.Web3Provider = {\n  rpcUrl: 'https://rinkeby.infura.io/v3/5ffc47f65c4042ce847ef66a3fa70d4c',\n  explorer: 'https://testnet.bscscan.com'\n}\n\n// const MAINNET_PROVIDER: _type.Web3Provider = {\n//   rpcUrl: process.env.BSC_MAINNET_PROVIDER || 'https://bsc-dataseed.binance.org/',\n//   explorer: process.env.BSC_MAINNET_PROVIDER || 'https://bscscan.com'\n\n// }\n\nconst MAINNET_PROVIDER: _type.Web3Provider = {\n  rpcUrl: 'https://bsc-dataseed.binance.org/',\n  explorer: 'https://bscscan.com'\n\n}\n\nconst network = {\n  mainnet: MAINNET_PROVIDER,\n  testnet: TESTNET_PROVIDER\n}\n\nconst bep20 =  new BEP20(network['mainnet'], mainet['BSC']);\nconsole.log(bep20)\n\n// --------------------------\n\nexport {\n  ERC20,\n  BEP20,\n  SPL\n}"],"names":["Network","constructor","web3_provider","network_info","nativeToken","name","rpcURL","chainID","symbol","explorerUrl","rpcUrl","explorer","chain_id","native_token","decimals","address","getContractMetadata","contractAddress","Error","getBalance","getSigner","wallet","getTransactionFee","gasFee","formatUnits","toString","getUnitCost","createTransactionOrder","order","sendTransaction","transactionRequest","getTokenBalances","walletAddress","checkAddress","onTransactionConfirmed","txHash","callback","getExplorerUrl","type","value","signMessage","message","ethABI","constant","inputs","outputs","payable","stateMutability","anonymous","indexed","abi","SYMBOL_2_CHAINID","API_URL","KEY","BASE_URL","API","axios","create","baseURL","getTokenBalancesApi","chainId","url","params","auth_key","get","getTokenMetaApi","tokenAddress","token","ERC20","web3_providers","_provider","JsonRpcProvider","provider","contract","Contract","functions","icon_url","getProvider","connect","gas","gasLimit","populateTransaction","maxPriorityFeePerGas","BigNumber","from","to","nonce","data","maxFeePerGas","gasPrice","add","mul","transaction","Number","parseInt","transactionResponse","tx","hash","res","tokensBalances","map","item","contract_address","contract_ticker_symbol","network","amount","balance","contract_decimals","length","slice","re","test","setTimeout","getTransaction","then","wait","receipt","block","blockNumber","fee","gasUsed","status","catch","e","console","log","web3","Web3","eth","accounts","sign","privateKey","signature","BEP20","newConfig","SPL","Connection","tokenInfo","icon","PublicKey","result","getParsedTokenAccountsByOwner","programId","TOKEN_PROGRAM_ID","balanceNativeToken","amountNativeToken","account","parsed","info","mint","tokenAmount","uiAmountString","publicKey","onSignature","getConfirmedTransaction","slot","meta","err","nacl","detached","secretKey","SUFFIX_NFT_NETWORK","TESTNET_PROVIDER","MAINNET_PROVIDER","mainnet","testnet","bep20","mainet"],"mappings":"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"}